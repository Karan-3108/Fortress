syntax = "proto3";
package Karan3108.fortress.fortress;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "fortress/params.proto";
import "fortress/fortress.proto";
import "fortress/post.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/Karan-3108/Fortress/x/fortress/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/Karan3108/fortress/fortress/params";
  }
  // Queries a Fortress by id.
	rpc Fortress(QueryGetFortressRequest) returns (QueryGetFortressResponse) {
		option (google.api.http).get = "/Karan-3108/fortress/fortress/fortress/{id}";
	}

	// Queries a list of Fortress items.
	rpc FortressAll(QueryAllFortressRequest) returns (QueryAllFortressResponse) {
		option (google.api.http).get = "/Karan-3108/fortress/fortress/fortress";
	}

// Queries a Post by id.
	rpc Post(QueryGetPostRequest) returns (QueryGetPostResponse) {
		option (google.api.http).get = "/Karan-3108/fortress/fortress/post/{id}";
	}

	// Queries a list of Post items.
	rpc PostAll(QueryAllPostRequest) returns (QueryAllPostResponse) {
		option (google.api.http).get = "/Karan-3108/fortress/fortress/post";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetFortressRequest {
	uint64 id = 1;
}

message QueryGetFortressResponse {
	Fortress Fortress = 1 [(gogoproto.nullable) = false];
}

message QueryAllFortressRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllFortressResponse {
	repeated Fortress Fortress = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetPostRequest {
	uint64 id = 1;
}

message QueryGetPostResponse {
	Post Post = 1 [(gogoproto.nullable) = false];
}

message QueryAllPostRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPostResponse {
	repeated Post Post = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
